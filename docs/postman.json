{
  "info": {
    "_postman_id": "2a48b7d3-1a1f-4c96-9c3d-ff1e3cc4f701",
    "name": "Chatbot AI Backend",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "GET /health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "health"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Groups",
      "item": [
        {
          "name": "GET /groups",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/groups", "host": ["{{baseUrl}}"], "path": ["groups"] }
          },
          "response": []
        },
        {
          "name": "POST /groups",
          "request": {
            "method": "POST",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" }, { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"name\": \"My Group\"\n}" },
            "url": { "raw": "{{baseUrl}}/groups", "host": ["{{baseUrl}}"], "path": ["groups"] }
          },
          "response": []
        },
        {
          "name": "PATCH /groups/:id",
          "request": {
            "method": "PATCH",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" }, { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"name\": \"Renamed Group\"\n}" },
            "url": { "raw": "{{baseUrl}}/groups/{{groupId}}", "host": ["{{baseUrl}}"], "path": ["groups", "{{groupId}}"] }
          },
          "response": []
        },
        {
          "name": "DELETE /groups/:id",
          "request": {
            "method": "DELETE",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/groups/{{groupId}}", "host": ["{{baseUrl}}"], "path": ["groups", "{{groupId}}"] }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Sessions",
      "item": [
        {
          "name": "GET /sessions",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/sessions", "host": ["{{baseUrl}}"], "path": ["sessions"] }
          },
          "response": []
        },
        {
          "name": "POST /sessions",
          "request": {
            "method": "POST",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" }, { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"title\": \"New Chat\",\n  \"groupId\": null\n}" },
            "url": { "raw": "{{baseUrl}}/sessions", "host": ["{{baseUrl}}"], "path": ["sessions"] }
          },
          "response": [],
          "event": [
            { "listen": "test", "script": { "type": "text/javascript", "exec": [
              "const json = pm.response.json();",
              "if (json && json.id) pm.collectionVariables.set('sessionId', json.id);"
            ]}}
          ]
        },
        {
          "name": "GET /sessions/:id",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/sessions/{{sessionId}}", "host": ["{{baseUrl}}"], "path": ["sessions", "{{sessionId}}"] }
          },
          "response": []
        },
        {
          "name": "PATCH /sessions/:id",
          "request": {
            "method": "PATCH",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" }, { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"title\": \"Renamed Chat\",\n  \"isFavorite\": true,\n  \"groupId\": null\n}" },
            "url": { "raw": "{{baseUrl}}/sessions/{{sessionId}}", "host": ["{{baseUrl}}"], "path": ["sessions", "{{sessionId}}"] }
          },
          "response": []
        },
        {
          "name": "DELETE /sessions/:id",
          "request": {
            "method": "DELETE",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/sessions/{{sessionId}}", "host": ["{{baseUrl}}"], "path": ["sessions", "{{sessionId}}"] }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Messages",
      "item": [
        {
          "name": "GET /messages/:sessionId",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/messages/{{sessionId}}", "host": ["{{baseUrl}}"], "path": ["messages", "{{sessionId}}"] }
          },
          "response": []
        },
        {
          "name": "POST /messages",
          "request": {
            "method": "POST",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" }, { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"sessionId\": \"{{sessionId}}\",\n  \"role\": \"user\",\n  \"content\": \"Hello AI\"\n}" },
            "url": { "raw": "{{baseUrl}}/messages", "host": ["{{baseUrl}}"], "path": ["messages"] }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "POST /auth/register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"secret123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "const json = pm.response.json();",
                  "if (json.accessToken) pm.collectionVariables.set('accessToken', json.accessToken);",
                  "if (json.refreshToken) pm.collectionVariables.set('refreshToken', json.refreshToken);"
                ]
              }
            }
          ]
        },
        {
          "name": "POST /auth/login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"secret123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "const json = pm.response.json();",
                  "if (json.accessToken) pm.collectionVariables.set('accessToken', json.accessToken);",
                  "if (json.refreshToken) pm.collectionVariables.set('refreshToken', json.refreshToken);"
                ]
              }
            }
          ]
        },
        {
          "name": "GET /auth/me",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "me"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST /auth/refresh",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{refreshToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "refresh"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "const json = pm.response.json();",
                  "if (json.accessToken) pm.collectionVariables.set('accessToken', json.accessToken);",
                  "if (json.refreshToken) pm.collectionVariables.set('refreshToken', json.refreshToken);"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "OAuth (Google)",
      "item": [
        {
          "name": "GET /auth/google (open in browser)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/google",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "google"
              ]
            },
            "description": "This starts the Google OAuth flow and will return a 302 redirect. Use 'Open in Browser' in Postman or open the URL manually to complete login."
          },
          "response": []
        },
        {
          "name": "INFO — Google callback",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/google/callback",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "google",
                "callback"
              ]
            },
            "description": "This endpoint is called by Google after login. Backend will issue tokens and redirect to GOOGLE_REDIRECT_URL with accessToken & refreshToken as query parameters. Not directly testable via Postman without a real OAuth roundtrip."
          },
          "response": []
        },
        {
          "name": "Set Tokens (manual)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"accessToken\": \"paste-from-redirect\",\n  \"refreshToken\": \"paste-from-redirect\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/__set_tokens_manual__",
              "host": ["{{baseUrl}}"],
              "path": ["__set_tokens_manual__"]
            },
            "description": "Helper request to store tokens into collection variables after completing OAuth in the browser and being redirected to the frontend with tokens in the URL."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "try {",
                  "  const b = pm.request.body && pm.request.body.raw ? JSON.parse(pm.request.body.raw) : {};",
                  "  if (b.accessToken) pm.collectionVariables.set('accessToken', b.accessToken);",
                  "  if (b.refreshToken) pm.collectionVariables.set('refreshToken', b.refreshToken);",
                  "  pm.test('Tokens set', function () { pm.expect(pm.collectionVariables.get('accessToken')).to.be.a('string'); });",
                  "} catch (e) { pm.test('Invalid JSON', function () { pm.expect.fail('Provide valid JSON with accessToken/refreshToken'); }); }"
                ]
              }
            }
          ],
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001"
    },
    {
      "key": "accessToken",
      "value": ""
    },
    {
      "key": "refreshToken",
      "value": ""
    },
    { "key": "groupId", "value": "" },
    { "key": "sessionId", "value": "" }
  ]
}
